# https://www.digitalocean.com/community/tutorials/how-to-improve-website-performance-using-gzip-and-nginx-on-ubuntu-20-0
# https://raw.githubusercontent.com/kamerk22/laravel-alpine/master/7.4/nginx-mysql/default.conf
# Upstream to abstract backend connection(s) for php
upstream php {
    server app:9000;
}

server {
    charset utf-8;
    client_max_body_size 128M;

    # listen for ipv4
    listen 80;

    server_name _;
    root /app/public;
    index index.html index.htm index.php;

    # Compression
    gzip on;
    # Compression level (1-9).
    # 5 is a perfect compromise between size and cpu usage, offering about
    # 75% reduction for most ascii files (almost identical to level 9).
    gzip_comp_level 5;
    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    gzip_min_length 256;
    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    gzip_proxied any;
    # Enable compression both for HTTP/1.0 and HTTP/1.1.
    gzip_http_version 1.1;
    # Tell proxies to cache both the gzipped and regular version of a resource
    # whenever the client's Accept-Encoding capabilities header varies;
    # Avoids the issue where a non-gzip capable client (which is extremely rare
    # today) would display gibberish if their proxy gave them the gzipped version.
    gzip_vary on;
    # Compress all output labeled with one of the following MIME-types.
    gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/rss+xml
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/svg+xml
      image/x-icon
      text/css
      text/plain
      text/x-component;
      # text/html is always compressed by HttpGzipModule


    location / {
        # Redirect everything that is not a real file to index.php
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.(js|css|png|jpg|jpeg|gif|swf|ico|pdf|mov|fla|zip|rar|eot|ttf|woff|woff2)$ {
        try_files $uri =404;
        expires max;
        add_header Cache-Control public;
        add_header Access-Control-Allow-Origin *;
        access_log off;
    }
    # error_page 404 /404.html

    # deny accessing php files from assets directories
    location ~ ^/(assets|css|js)/.*\.php {
        deny all;
    }

    location ~ \.php$ {
        include fastcgi.conf;
        fastcgi_pass php;
        try_files $uri =404;
    }

    # deny access to .htaccess, .git, .htpasswd and etc... files and directories
    location ~* /\. {
        deny all;
    }

    location /stub_status {
        stub_status;
        # Security: Only allow access from the IP below.
        # allow 192.168.1.200;
        # Deny anyone else
        deny all;
    }
}
